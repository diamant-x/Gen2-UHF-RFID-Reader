<?xml version="1.0"?>

<!-- /* -*- c++ -*- */
/* 
 * Copyright 2021 <Jon Lejarreta (jlejarreta@uoc.edu)>.
 * 
 * This is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */ -->

<block>
  <name>tag_decoder</name>
  <key>rfid_tag_decoder</key>
  <category>rfid</category>
  <import>import rfid</import>
  <make>rfid.tag_decoder($sample_rate)</make>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>sample_rate</name>
    <key>sample_rate</key>
    <type>int</type>
  </param>

  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>complex</type> <!-- e.g. int, float, complex, byte, short, xxx_vector, ...-->
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name> <!--float *out = (float *) output_items[0];-->
    <type>float</type> <!-- e.g. int, float, complex, byte, short, xxx_vector, ...-->
  </source>
  
  <source>
    <name>out_2</name> <!--gr_complex *out_2 = (gr_complex *) output_items[1]; // for debugging-->
    <type>complex</type> <!-- e.g. int, float, complex, byte, short, xxx_vector, ...-->
  </source>
</block>
